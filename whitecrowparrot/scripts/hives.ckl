// Welcome to Crackle Script.
//
// This is the Corax Engine event script language.
// Don't be scared, it's extremely easy to use. The language rely on indent of
// four spaces. It is composed of scripts which are evaluated by the Zones
// where it is attached. For instance, a zone named "chest_interaction" has is
// defined as "affected by whitecrow", the script will be evaluated when the
// zone contains the center of "whitecrow".
// The syntax is pretty simple, zero indent is the script declaration level.
// Firt indent level is the condition to execute the followings jobs and the
// second indent level is the job queue.
//
// List of available keywords:
// declaration: (script, event)
// conditional and time related adverbs/function: (always, freeze, nolock,
//                                                 wait)
// comparators: (has, in, is, by)
// functions: (aim, checkpoint, clear, fadein, fadeout, flush, force, freeze,
//             hide, move, pin, play, reach, restart, run, show, set, shift,
//             wait, add, remove)
// corax known objects: (animation, flip, gamepad, globals, hitmap, key,
//                       name, player, pressed, scene, sheet, theatre, zone,
//                       camera, target)
// built-in values: (false, true)


event kick_ass
    npc.jos play pick_ass


event backstab
    player.whitecrow.sheet set death
    nolock player.whitecrow play death_by_backstab
    wait 30
    fadeout 15
    restart


script flee
    npc.jos.animation in (idle, shaking)
    // theatre.globals.jos_flee_running is false
        // theatre.globals.jos_flee_running set true
        npc.jos play run_1
        npc.jos play run_2
        npc.jos play run_1
        // theatre.globals.jos_flee_running set false


event tree_shaking
    nolock prop.lie_trunk play shake


event tree_small_shaking
    nolock prop.lie_trunk play step_shake


event shake_jos_1
    pin npc.jos
    flush npc.jos
    nolock npc.jos play waggling

